!function(n,e){"use strict";e.module("mdFormConfirm",["ng"]).directive("form",["$timeout","$transitions","$mdDialog",function(t,i,o){"ngInject";return{restrict:"E",scope:{name:"@name",ctrl:"@ctrl",obj:"@obj",nativeConfirm:"@nativeConfirm"},link:function(r,a,c){var u={enable:!0,backup:void 0,main:function(){c.ctrl&&c.obj&&u.addEventListener()},addEventListener:function(){t(u.setBackup.bind(u),700),i.onStart({},u.eventPrevent.bind(u)),r.$on("$destroy",u.clearEventListener.bind(u)),a.scope()[c.name].$isChanged=u.isModified.bind(u),a.scope()[c.name].$updateChanged=u.setBackup.bind(u),c.nativeConfirm&&u.enable&&(n.onbeforeunload=u.showNativeAlertConfirm.bind(u))},clearEventListener:function(){u.enable=!1,n.onbeforeunload=void 0},getData:function(){return a.scope()[c.ctrl][c.obj]},setBackup:function(){u.backup=e.copy(u.getData())},isModified:function(){if(u.enable)return!e.equals(u.getData(),u.backup)},showNativeAlertConfirm:function(){return u.isModified()},showPopupConfirm:function(){return o.show(o.confirm().title("Save changes").htmlContent("There are unsaved changes, would you like to continue?").cancel("CANCEL").ok("OK"))},eventPrevent:function(){if(u.isModified())return u.showPopupConfirm(arguments)}};u.main()}}}])}(window,window.angular);