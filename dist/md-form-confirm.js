!function(c,f){"use strict";f.module("mdFormConfirm",["ng"]).directive("form",["$transitions","$mdDialog","$q",function(e,r,a){return{restrict:"E",scope:{name:"@name",ctrl:"@ctrl",obj:"@obj",nativeConfirm:"=nativeConfirm",formControl:"=formControl",formConfirmReject:"=formConfirmReject"},link:function(t,n,o){var i={backup:void 0,main:function(){o.ctrl&&o.obj&&i.addEventListener()},addEventListener:function(){e.onStart({},i.eventPrevent.bind(i)),t.$watch("formControl",i.featureSwitch.bind(i)),t.$on("$destroy",i.clearEventListener.bind(i)),n.scope()[o.name].$isChanged=i.isModified.bind(i),n.scope()[o.name].$updateChanged=i.setBackup.bind(i)},clearEventListener:function(){c.removeEventListener("beforeunload",i.showNativeAlertConfirm.bind(i)),i.enable=!1},featureSwitch:function(e){if(e)return i.setBackup(),i.enable=!0,void c.addEventListener("beforeunload",i.showNativeAlertConfirm.bind(i));i.clearEventListener()},getData:function(){var e=f.copy(n.scope()[o.ctrl][o.obj]);return f.forEach(e,function(e){return e.$$hashKey&&delete e.$$hashKey,e})},setBackup:function(){i.backup=i.getData()},isModified:function(){if(i.enable)return!f.equals(i.getData(),i.backup)},showNativeAlertConfirm:function(e){return!(!t.nativeConfirm||!i.isModified())&&(e.preventDefault(),e.returnValue="Modified",!0)},showPopupConfirm:function(){var n=a.defer();return r.show(r.confirm().title("Save changes").htmlContent("There are unsaved changes, would you like to continue?").cancel("CANCEL").ok("OK")).then(function(e){n.resolve(e)}).catch(function(e){n.reject(e),t.formConfirmReject&&t.formConfirmReject()}),n.promise},eventPrevent:function(){if(i.isModified())return i.showPopupConfirm(arguments)}};i.main()}}}])}(window,window.angular);