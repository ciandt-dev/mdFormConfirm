!function(f,u){"use strict";u.module("mdFormConfirm",["ng"]).directive("form",["$timeout","$transitions","$mdDialog","$q",function(i,r,a,c){"ngInject";return{restrict:"E",scope:{name:"@name",ctrl:"@ctrl",obj:"@obj",nativeConfirm:"@nativeConfirm",formConfirmReject:"=formConfirmReject"},link:function(t,e,n){var o={enable:!0,backup:void 0,main:function(){n.ctrl&&n.obj&&o.addEventListener()},addEventListener:function(){i(o.setBackup.bind(o),700),r.onStart({},o.eventPrevent.bind(o)),t.$on("$destroy",o.clearEventListener.bind(o)),e.scope()[n.name].$isChanged=o.isModified.bind(o),e.scope()[n.name].$updateChanged=o.setBackup.bind(o),n.nativeConfirm&&o.enable&&(f.onbeforeunload=o.showNativeAlertConfirm.bind(o))},clearEventListener:function(){o.enable=!1,f.onbeforeunload=void 0},getData:function(){return e.scope()[n.ctrl][n.obj]},setBackup:function(){o.backup=u.copy(o.getData())},isModified:function(){if(o.enable)return!u.equals(o.getData(),o.backup)},showNativeAlertConfirm:function(){return o.isModified()},showPopupConfirm:function(){var n=c.defer();return a.show(a.confirm().title("Save changes").htmlContent("There are unsaved changes, would you like to continue?").cancel("CANCEL").ok("OK")).then(function(e){n.resolve(e)}).catch(function(e){n.reject(e),t.formConfirmReject&&t.formConfirmReject()}),n.promise},eventPrevent:function(){if(o.isModified())return o.showPopupConfirm(arguments)}};o.main()}}}])}(window,window.angular);