!function(f,c){"use strict";c.module("mdFormConfirm",["ng"]).directive("form",["$transitions","$mdDialog","$q",function(e,i,a){return{restrict:"E",scope:{name:"@name",ctrl:"@ctrl",obj:"@obj",nativeConfirm:"=nativeConfirm",formControl:"=formControl",formConfirmReject:"=formConfirmReject"},link:function(t,n,o){var r={backup:void 0,main:function(){o.ctrl&&o.obj&&r.addEventListener()},addEventListener:function(){e.onStart({},r.eventPrevent.bind(r)),t.$watch("formControl",r.featureSwitch.bind(r)),t.$on("$destroy",r.clearEventListener.bind(r))},clearEventListener:function(){f.removeEventListener("beforeunload",r.showNativeAlertConfirm.bind(r)),r.enable=!1},featureSwitch:function(e){if(e)return r.setBackup(),r.enable=!0,void f.addEventListener("beforeunload",r.showNativeAlertConfirm.bind(r));r.clearEventListener()},getData:function(){var e=c.copy(n.scope()[o.ctrl][o.obj]);return c.forEach(e,function(e){return e.$$hashKey&&delete e.$$hashKey,e})},setBackup:function(){r.backup=r.getData()},isModified:function(){if(r.enable)return!c.equals(r.getData(),r.backup)},showNativeAlertConfirm:function(e){return!(!t.nativeConfirm||!r.isModified())&&(e.preventDefault(),e.returnValue="Modified",!0)},showPopupConfirm:function(){var n=a.defer();return i.show(i.confirm().title("Save changes").htmlContent("There are unsaved changes, would you like to continue?").cancel("CANCEL").ok("OK")).then(function(e){n.resolve(e)}).catch(function(e){n.reject(e),t.formConfirmReject&&t.formConfirmReject()}),n.promise},eventPrevent:function(){if(r.isModified())return r.showPopupConfirm(arguments)}};r.main()}}}])}(window,window.angular);